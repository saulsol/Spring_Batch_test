spring:
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false # 서버를 실행시켰을 때 바로 실행이 되지 않게 방지 => 원하는 시간 때에 실행되도록 config 작성해야 함
  datasource:
    primary: # Meta Database
      jdbcUrl: ${DATABASE_URL} # .yml 파일을 쓰는 경우 jdbcUrl로 변경해서 맵핑해야 한다.
      username: ${DATABASE_USER}
      password: ${DATABASE_PASSWORD}
      driver-class-name: com.mysql.cj.jdbc.Driver
    secondary: # Result Database
      jdbcUrl: ${RESULT_DATABASE_URL} # .yml 파일을 쓰는 경우 jdbcUrl로 변경해서 맵핑해야 한다.
      username: ${RESULT_DATABASE_USER}
      password: ${RESULT_DATABASE_PASSWORD}
      driver-class-name: com.mysql.cj.jdbc.Driver
  servlet:
    multipart:
      maxRequestSize: 30MB
      maxFileSize: 10MB
  jpa:
    defer-datasource-initialization: true
    hibernate.ddl-auto: validate
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
    sql.init.mode: always
